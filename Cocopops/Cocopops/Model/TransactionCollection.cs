// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TransactionCollection.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Cocopops.Model.TransactionCollection {

  /// <summary>Holder for reflection information generated from TransactionCollection.proto</summary>
  public static partial class TransactionCollectionReflection {

    #region Descriptor
    /// <summary>File descriptor for TransactionCollection.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TransactionCollectionReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChtUcmFuc2FjdGlvbkNvbGxlY3Rpb24ucHJvdG8SDkNvY29wb3BzLk1vZGVs",
            "GhFUcmFuc2FjdGlvbi5wcm90byJKChVUcmFuc2FjdGlvbkNvbGxlY3Rpb24S",
            "MQoMdHJhbnNhY3Rpb25zGAEgAygLMhsuQ29jb3BvcHMuTW9kZWwuVHJhbnNh",
            "Y3Rpb25CJ6oCJENvY29wb3BzLk1vZGVsLlRyYW5zYWN0aW9uQ29sbGVjdGlv",
            "bmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Cocopops.Model.Transaction.TransactionReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Cocopops.Model.TransactionCollection.TransactionCollection), global::Cocopops.Model.TransactionCollection.TransactionCollection.Parser, new[]{ "Transactions" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class TransactionCollection : pb::IMessage<TransactionCollection> {
    private static readonly pb::MessageParser<TransactionCollection> _parser = new pb::MessageParser<TransactionCollection>(() => new TransactionCollection());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionCollection> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Cocopops.Model.TransactionCollection.TransactionCollectionReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionCollection() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionCollection(TransactionCollection other) : this() {
      transactions_ = other.transactions_.Clone();
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionCollection Clone() {
      return new TransactionCollection(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Cocopops.Model.Transaction.Transaction> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Cocopops.Model.Transaction.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Cocopops.Model.Transaction.Transaction> transactions_ = new pbc::RepeatedField<global::Cocopops.Model.Transaction.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Cocopops.Model.Transaction.Transaction> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionCollection);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionCollection other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactions_.WriteTo(output, _repeated_transactions_codec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionCollection other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
